/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution 
{
public:
    
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) 
    {
        int num = l1->val + l2->val;
        ListNode *l = new ListNode();
        l->val = num%10;
        num /= 10;
        ListNode *cur = l;
        l1 = l1->next;
        l2 = l2->next;
        while(l1 && l2)
        {
            num += l1->val + l2->val;
            ListNode* node = new ListNode();
            node->val = num %10;
            cur->next = node;
            cur = node;
            num/=10;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1)
        {
            num += l1->val;
            ListNode* node = new ListNode();
            node->val = num %10;
            cur->next = node;
            cur = node;
            num/=10;
            l1 = l1->next;
        }
        while (l2)
        {
            num += l2->val;
            ListNode* node = new ListNode();
            node->val = num %10;
            cur->next = node;
            cur = node;
            num/=10;
            l2 = l2->next;
        }
        if(num)
        {
            ListNode* node = new ListNode();
            node->val = num %10;
            cur->next = node;
        }
        return l;
    }
};
