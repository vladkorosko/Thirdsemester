/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void Append(vector<int> &nums, ListNode* l)
    {
        while(l)
        {
            nums.push_back(l->val);
            l = l->next;
        }
    }
    
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) 
    {
        vector<int> nums;
        Append(nums,l1);
        Append(nums,l2);
        sort(nums.begin(),nums.end());
        ListNode* l = new ListNode();
        ListNode* cur = l;
        if(nums.size())
        {
            l->val = nums[0];
            for(int i = 1; i < nums.size(); i++)
            {
                ListNode* node = new ListNode();
                node->val = nums[i];
                cur->next = node;
                cur = node;
            }
            return l;
        }
        return nullptr;
    }
};
